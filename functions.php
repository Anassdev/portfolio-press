<?php
/**
 * @package WordPress
 * @subpackage Portfolio Press
 */

/**
 * Sets up the options panel and default functions
 */
require_once( TEMPLATEPATH . '/extensions/options-functions.php' );

/**
 * Enables the Portfolio custom post type
 */
if ( !of_get_option( 'disable_portfolio', "0" ) && !function_exists( 'portfolioposttype' ) ) {
	require_once( TEMPLATEPATH . '/extensions/portfolio-post-type.php' );
}

if ( !function_exists( 'portfolioposttype' ) && current_user_can( 'install_plugins' ) ) {

	/* Display a notice that can be dismissed */

	add_action( 'admin_notices', 'portfoliopress_install_plugin_notice' );

	function portfoliopress_install_plugin_notice() {
		global $current_user ;
		$user_id = $current_user->ID;
		/* Check that the user hasn't already clicked to ignore the message */
		if ( ! get_user_meta( $user_id, 'portfoliopress_install_plugin_notice' ) ) {
			add_thickbox();
			echo '<div class="updated"><p>';
			printf( __( 'The next version of Portfolio Press will require the Portfolio Post Type Plugin.  <a href="%1$s" class="thickbox onclick">Install Now</a> | <a href="%2$s">Hide Notice</a>' ), admin_url() . 'plugin-install.php?tab=plugin-information&plugin=portfolio-post-type&TB_iframe=true&width=640&height=517', '?example_nag_ignore=0' );
			echo '</p></div>';
		}
	}

	add_action( 'admin_init', 'portfoliopress_post_plugin_ignore' );

	function portfoliopress_post_plugin_ignore() {
		global $current_user;
		$user_id = $current_user->ID;
		/* If user clicks to ignore the notice, add that to their user meta */
		if ( isset( $_GET['example_nag_ignore'] ) && '0' == $_GET['example_nag_ignore'] ) {
			add_user_meta( $user_id, 'example_ignore_notice', 'true', true );
		}
	}

}

/**
 * If 3.1 isn't installed display a notice that post type archives will not work
 */
function portfoliopress_archive_nag() {
	global $pagenow;
	if ( $pagenow == 'themes.php' ) {
		echo '<div class="updated"><p>';
		_e( 'Portfolio archive pages will only display in WordPress 3.1 or above.  Please upgrade.', 'portfoliopress' );
		echo '</p></div>';
	}
}

if ( get_bloginfo( 'version' ) < 3.1 ) {
	add_action( 'admin_notices', 'portfoliopress_archive_nag' );
}

/**
 * Make theme available for translation
 * Translations can be filed in the /languages/ directory
 */
load_theme_textdomain( 'portfoliopress', TEMPLATEPATH . '/languages' );

$locale = get_locale();
$locale_file = TEMPLATEPATH . "/languages/$locale.php";
if ( is_readable( $locale_file ) )
	require_once( $locale_file );

/**
 * Set the content width based on the theme's design and stylesheet.
 */
if ( ! isset( $content_width ) )
	$content_width = 640;

/**
 * This theme styles the visual editor with editor-style.css to match the theme style.
 */
add_editor_style();

/**
 * This theme uses wp_nav_menu() in one location.
 */
register_nav_menus( array(
		'primary' => __( 'Primary Menu', 'portfoliopress' ),
	) );

/**
 * Add default posts and comments RSS feed links to head
 */
add_theme_support( 'automatic-feed-links' );

/**
 * Enqueue Javascripts
 */
if ( !is_admin() ) {
	wp_enqueue_script( 'superfish', get_template_directory_uri() .'/js/superfish.js', array( 'jquery' ) );
	wp_enqueue_script( 'fader', get_template_directory_uri() . '/js/jquery.fader.js', array( 'jquery' ) );
}

/**
 * Makes some changes to the <title> tag, by filtering the output of wp_title().
 *
 * If we have a site description and we're viewing the home page or a blog posts
 * page (when using a static front page), then we will add the site description.
 *
 * If we're viewing a search result, then we're going to recreate the title entirely.
 * We're going to add page numbers to all titles as well, to the middle of a search
 * result title and the end of all other titles.
 *
 * @param string $title Title generated by wp_title()
 * @param string $separator The separator passed to wp_title(). Twenty Ten uses a
 *  vertical bar, "|", as a separator in header.php.
 * @return string The new title, ready for the <title> tag.
 */
function portfolio_filter_wp_title( $title, $separator ) {
	// Don't affect wp_title() calls in feeds.
	if ( is_feed() )
		return $title;

	// The $paged global variable contains the page number of a listing of posts.
	// The $page global variable contains the page number of a single post that is paged.
	// We'll display whichever one applies, if we're not looking at the first page.
	global $paged, $page;

	if ( is_search() ) {
		// If we're a search, let's start over:
		$title = sprintf( __( 'Search results for %s', 'portfoliopress' ), '"' . get_search_query() . '"' );
		// Add a page number if we're on page 2 or more:
		if ( $paged >= 2 )
			$title .= " $separator " . sprintf( __( 'Page %s', 'portfoliopress' ), $paged );
		// Add the site name to the end:
		$title .= " $separator " . get_bloginfo( 'name', 'display' );
		// We're done. Let's send the new title back to wp_title():
		return $title;
	}

	// Otherwise, let's start by adding the site name to the end:
	$title .= get_bloginfo( 'name', 'display' );

	// If we have a site description and we're on the home/front page, add the description:
	$site_description = get_bloginfo( 'description', 'display' );
	if ( $site_description && ( is_home() || is_front_page() ) )
		$title .= " $separator " . $site_description;

	// Add a page number if necessary:
	if ( $paged >= 2 || $page >= 2 )
		$title .= " $separator " . sprintf( __( 'Page %s', 'portfoliopress' ), max( $paged, $page ) );

	// Return the new title to wp_title():
	return $title;
}

add_filter( 'wp_title', 'portfolio_filter_wp_title', 100, 2 );

/**
 * Get our wp_nav_menu() fallback, wp_page_menu(), to show a home link.
 */
function portfolio_page_menu_args( $args ) {
	$args['show_home'] = true;
	$args['menu_class'] = 'menu';
	return $args;
}

add_filter( 'wp_page_menu_args', 'portfolio_page_menu_args' );

/**
 * Class name for wp_nav_menu
 */
function portfolio_wp_nav_menu_args( $args ) {
	$args['container_class'] = 'menu';
	$args['menu_class'] = '';
	return $args;
}

add_filter( 'wp_nav_menu_args', 'portfolio_wp_nav_menu_args' );

/**
 * Register widgetized area and update sidebar with default widgets
 */
function portfolio_widgets_init() {
	register_sidebar( array (
			'name' => __( 'Sidebar', 'portfoliopress' ),
			'id' => 'sidebar',
			'before_widget' => '<li id="%1$s" class="widget-container %2$s">',
			'after_widget' => "</li>",
			'before_title' => '<h3 class="widget-title">',
			'after_title' => '</h3>',
		) );

	register_sidebar( array( 'name' => __( 'Footer 1', 'portfoliopress' ),'id' => 'footer-1', 'description' => __( "Widetized footer", 'portfoliopress' ), 'before_widget' => '<div id="%1$s" class="widget-container %2$s">','after_widget' => '</div>','before_title' => '<h3>','after_title' => '</h3>' ) );
	register_sidebar( array( 'name' => __( 'Footer 2', 'portfoliopress' ),'id' => 'footer-2', 'description' => __( "Widetized footer", 'portfoliopress' ), 'before_widget' => '<div id="%1$s" class="widget-container %2$s">','after_widget' => '</div>','before_title' => '<h3>','after_title' => '</h3>' ) );
	register_sidebar( array( 'name' => __( 'Footer 3', 'portfoliopress' ),'id' => 'footer-3', 'description' => __( "Widetized footer", 'portfoliopress' ), 'before_widget' => '<div id="%1$s" class="widget-container %2$s">','after_widget' => '</div>','before_title' => '<h3>','after_title' => '</h3>' ) );
	register_sidebar( array( 'name' => __( 'Footer 4', 'portfoliopress' ),'id' => 'footer-4', 'description' => __( "Widetized footer", 'portfoliopress' ), 'before_widget' => '<div id="%1$s" class="widget-container %2$s">','after_widget' => '</div>','before_title' => '<h3>','after_title' => '</h3>' ) );
}

add_action( 'init', 'portfolio_widgets_init' );

/**
 * Set version number in options and runs tag updater script
 */
if ( !of_get_option( 'version', false ) ) {
	register_taxonomy( 'portfolio-tags', 'portfolio', array( 'public'=> false ) );
	$term_ids = get_terms( 'portfolio-tags', array( 'hide_empty' => false ,'fields' => 'ids' ) );
	if ( $term_ids && ( taxonomy_exists( 'portfolio_tag' ) ) ) {
		portfoliopress_update_portfolio_tags( $term_ids );
	}
	$options = get_option( 'portfoliopress' );
	$options['version'] = '0.7.5';
	update_option( 'portfoliopress', $options );
}

/**
 * In previous versions of Portfolio Press, portfolio tags were registered as portfolio-tags
 * These need to be updated to the portfolio_tag taxonomy
 */
function portfoliopress_update_portfolio_tags( $term_ids ) {
	register_taxonomy( 'portfolio-tags', 'portfolio', array( 'public'=> false ) );
	$taxonomy = 'portfolio-tags';
	$new_tax = 'portfolio_tag';
	$tt_ids = array();
	foreach ( $term_ids as $term_id ) {
		$term = get_term( $term_id, $taxonomy );
		$tt_ids[] = $term->term_taxonomy_id;
	}
	$tt_ids = implode( ',', array_map( 'absint', $tt_ids ) );
	global $wpdb;
	$wpdb->query( $wpdb->prepare( "
		UPDATE $wpdb->term_taxonomy SET taxonomy = %s WHERE term_taxonomy_id IN ($tt_ids)
	", $new_tax ) );
}

// Sets posts displayed per portfolio page to 9 -- Feel free to change
function wpt_portfolio_custom_posts_per_page( &$q ) {
	if ( get_post_type() == 'portfolio' )
		$q->set( 'posts_per_page', 9 );
	return $q;
}

add_filter( 'parse_query', 'wpt_portfolio_custom_posts_per_page' );

?>